[project]
name = "sqlite-wrapper"
version = "1"
requires-python = ">=3.12"
classifiers = ["Programming Language :: Python"]

[tool.ruff]
line-length = 120
output-format = "grouped"
extend-include = ["*.ipynb"]

[tool.ruff.lint.pylint]
max-args = 7

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = ["F403"]               # import * can be used in init
"wrapper/sqlite.py" = ["E501", "S608"] # Func too long, immutatble agrs
"*.py" = ["UP040", "SIM117"]
# UP040:  keyword "type" not yet support for cython
# ANN401: any is needed for some cases
# SIM117: multiple-with-statements, logic may fail if enabled 

[tool.ruff.lint]
extend-select = [
    # https://docs.astral.sh/ruff/rules/
    "F",    # pyflakes
    "E",    # pycodestyle error
    "W",    # pycodestyle warning
    "I",    # isort
    "UP",   # pyupgrade
    "YTT",  # flake8-2020
    "ANN",  # flake8-annotations
    "S",    # flake8-bandit
    "B",    # flake8-bugbear
    "A",    # flake8-builtins
    "C4",   # flake8-comprehensions
    "T10",  # flake8-debugger
    "FA",   # flake8-future-annotations
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "LOG",  # flake8-logging
    "INP",  # flake8-no-pep420
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "PYI",  # flake8-pyi
    "Q",    # flake8-quotes
    "RSE",  # flake8-raise
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "TCH",  # flake8-type-checking
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "PD",   # pandas-vet
    "PL",   # pylint
    "FLY",  # flynt
    "NPY",  # numPy-specific rules
    "RUF",  # ruff-specific rules
    "FURB", # refurb
    "PERF", # perflint
]
